{
  "name": "pygls-playground",
  "description": "Extension for experimenting with pygls powered language servers",
  "author": "Open Law Library",
  "repository": "https://github.com/openlawlibrary/pygls",
  "license": "Apache-2.0",
  "version": "1.0.2",
  "publisher": "openlawlibrary",
  "engines": {
    "node": ">=16.17.1",
    "vscode": "^1.78.0"
  },
  "extensionDependencies": [
    "ms-python.python"
  ],
  "categories": [
    "Programming Languages"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "contributes": {
    "commands": [
      {
        "command": "pygls.server.restart",
        "title": "Restart Language Server",
        "category": "pygls"
      },
      {
        "command": "pygls.server.executeCommand",
        "title": "Execute Command",
        "category": "pygls"
      }
    ],
    "configuration": [
      {
        "type": "object",
        "title": "Json Server Configuration",
        "properties": {
          "pygls.jsonServer.exampleConfiguration": {
            "scope": "resource",
            "type": "string",
            "default": "You can override this message"
          }
        }
      },
      {
        "type": "object",
        "title": "Server Configuration",
        "properties": {
          "pygls.server.cwd": {
            "scope": "resource",
            "type": "string",
            "description": "The working directory from which to launch the server.",
            "markdownDescription": "The working directory from which to launch the server.\nIf blank, this will default to the `examples/servers` directory."
          },
          "pygls.server.debug": {
            "scope": "resource",
            "default": false,
            "type": "boolean",
            "description": "Enable debugging of the server process."
          },
          "pygls.server.debugHost": {
            "scope": "resource",
            "default": "localhost",
            "type": "string",
            "description": "The host on which the server process to debug is running."
          },
          "pygls.server.debugPort": {
            "scope": "resource",
            "default": 5678,
            "type": "integer",
            "description": "The port number on which the server process to debug is listening."
          },
          "pygls.server.launchScript": {
            "scope": "resource",
            "type": "string",
            "default": "json_server.py",
            "description": "The python script to run when launching the server.",
            "markdownDescription": "The python script to run when launching the server.\n Relative to #pygls.server.cwd#"
          },
          "pygls.server.pythonPath": {
            "scope": "resource",
            "type": "string",
            "default": "",
            "description": "The python interpreter to use to run the server.\nBy default, this extension will attempt to use the Python interpreter configured via the Python extension, setting this setting will override this behavior."
          },
          "pygls.trace.server": {
            "scope": "resource",
            "type": "string",
            "default": "off",
            "enum": [
              "off",
              "messages",
              "verbose"
            ],
            "description": "Controls if LSP messages send to/from the server should be logged.",
            "enumDescriptions": [
              "do not log any lsp messages",
              "log all lsp messages sent to/from the server",
              "log all lsp messages sent to/from the server, including their contents"
            ]
          }
        }
      },
      {
        "type": "object",
        "title": "Client Configuration",
        "properties": {
          "pygls.client.documentSelector": {
            "scope": "window",
            "type": "array",
            "items": {
              "type": "object"
            },
            "default": [
              {
                "scheme": "file",
                "language": "json"
              }
            ],
            "description": "The client uses this to decide which documents the server is able to help with.",
            "markdownDescription": "The client uses this to decide which documents the server is able to help with.\n See [DocumentSelector](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#documentFilter) in the LSP Specification for more details."
          }
        }
      }
    ]
  },
  "main": "./out/extension",
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p .",
    "watch": "tsc -p . -w"
  },
  "devDependencies": {
    "@types/node": "^16.11.6",
    "@types/semver": "^7.5.0",
    "@types/vscode": "^1.78.0",
    "@typescript-eslint/eslint-plugin": "^5.3.0",
    "@typescript-eslint/parser": "^5.3.0",
    "eslint": "^8.2.0",
    "typescript": "^5.1.0"
  },
  "dependencies": {
    "@vscode/python-extension": "^1.0.4",
    "semver": "^7.5.4",
    "vscode-languageclient": "^8.1.0"
  }
}
